@*
    For more information on enabling MVC for empty projects, visit https://go.microsoft.com/fwlink/?LinkID=397860
*@
@{ }
@model string
@using Microsoft.AspNetCore.Http
@using static QSCustomer.Extensions.ProjectExtensions
@{
    string projectCode = "", _Url = "/";
    //bool open = true, close = false, problematic;
    DateTime dateVal = DateTime.Now;
    DateTime startDate = DateTime.Now;
    //string startDate = "";

    DateTime finishDate = DateTime.Now;

    bool open = Convert.ToBoolean(Context.Request.Cookies["_kj8gzt"]);
    bool close = Convert.ToBoolean(Context.Request.Cookies["_h4k9xp"]);
    if (!(open) && !(close))
    {
        open = true;
    }
    bool problematic = false;
    int filter = 0;
    var _aaaaaa = close; 
}



<link href="https://cdn.datatables.net/1.11.3/css/jquery.dataTables.min.css" rel="stylesheet" />


<style>
    th {
        cursor: pointer;
    }

    body {
        padding-right: 0px !important;
    }
    /*
    main {
        min-height: 300px;
        max-height: 1000px;
        height: auto;
    }

    .page-wrapper {
        position: relative;
    }
    */
    .spinner-loading {
        position: absolute;
    }

    .dx-datagrid-filter-row {
        display: none !important;
    }


    .dx-data-row:hover {
        /*background-color: #2AA377;*/
        /*background-color: #61C6BF;*/
        background-color: #CDCDCD;
        transition: background-color 0.5s;
    }

    .dx-data-row {
        transition: background-color 0.5s;
    }

    .modal-open {
        overflow: unset !important;
    }

    .btn-dx-secondary {
        background-color: #808080;
        color: white;
    }
    /*
    .page-wrapper {
        position: relative;
        min-height: 100vh;
    }*/
    /*
    .site-footer {

        position: absolute;
        width: 100%;
        bottom: 0 !important;
    }*/
</style>


<form method="get" id="frmCode" asp-action="Details" asp-controller="Reports">
    <button id="datebtn" class="btn dx-button-default" type="button" hidden>Test</button>
    <input type="text" id="dateStartinp" name="startDate" asp-for="@startDate" hidden />
    <input type="text" id="dateFinishinp" name="finishDate" asp-for="@finishDate" hidden />

    <input hidden type="text" id="selectedVal" value="" asp-for="@projectCode" />
    <div class="container mt-5 mb-3 p-3 shadow-3" style="background-color: #f5f5f5">
        <div class="d-flex justify-content-start row">
            <div class="col-12">
                <label id="type"></label>
            </div>
            <div class="col-6 mt-1">
                <label id="name"></label>
            </div>
            <div class="d-flex justify-content-end col-6">
                <div class="form-check m-1">
                    <input class="form-check-input" type="checkbox" value="@open.ToString()" id="open" asp-for="@open" />
                    <label class="form-check-label" for="open">
                        Açık / Open
                    </label>
                </div>

                <div class="form-check m-1">
                    <input class="form-check-input" type="checkbox" value="@close.ToString()" id="close" asp-for="@close" />
                    <label class="form-check-label" for="close">
                        Kapalı / Close
                    </label>
                </div>
                @*<input hidden class="form-check-input" type="checkbox" value="@problematic.ToString()" id="problematic" asp-for="@problematic" />*@

            </div>

            <div class="col-12">
                <label id="mail"></label>
            </div>
        </div>

    </div>
    <div class="container p-0 mb-5">
        <div id="spinner-loading">
            <section class="w-100 d-flex align-items-center justify-content-center" style="height: 100vh;" id="sectionArea">
                <img class="preloader__image" width="60" src="assets/images/loader.png" alt="" />
            </section>
        </div>
        <div id="expertgrid">
            <div class="dx-viewport demo-container">
                <!--<p>Click this text and press <b>Tab</b></p>-->
                <div id="gridContainer"></div>
            </div>
        </div>

    </div>



    <!-- Modal -->
    <div class="modal fade" id="selectionMessage" tabindex="-1" aria-labelledby="exampleModalLabel" aria-hidden="true">
        <div class="modal-dialog">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title" id="exampleModalLabel">Report Details</h5>
                    <button type="button" class="btn-close" data-mdb-dismiss="modal" aria-label="Close"></button>
                </div>
                <div class="modal-body modal-report">
                    <div class="row">
                        <div class="col-12">
                            <div class="dx-field">
                                <div class="row">
                                    <div class="col-12">
                                        <div class="dx-field-label">First Date</div>
                                        <div class="dx-field-value">
                                            <div id="dateStarting"></div>
                                        </div>
                                    </div>
                                    <div class="col-12 mt-2">
                                        <div class="dx-field-label">Last Date</div>
                                        <div class="dx-field-value">
                                            <div id="dateFinish"></div>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                    <div id="filterRadioCheck">
                        <div class="form-check">
                            <input class="form-check-input" type="radio" name="filterRadio" id="daily" value="0" asp-for="@filter" />
                            <label class="form-check-label" for="daily"> Last Day </label>
                        </div>

                        <div class="form-check">
                            <input class="form-check-input" type="radio" name="filterRadio" id="weekly" value="1" asp-for="@filter" />
                            <label class="form-check-label" for="weekly"> Last Week </label>
                        </div>
                        <div class="form-check">
                            <input class="form-check-input" type="radio" name="filterRadio" id="monthly" value="2" asp-for="@filter" />
                            <label class="form-check-label" for="monthly"> Last Month </label>
                        </div>
                        <div class="form-check">
                            <input class="form-check-input" type="radio" name="filterRadio" id="optional" value="3" asp-for="@filter" />
                            <label class="form-check-label" for="optional"> Optional Of Date </label>
                        </div>
                        <div class="form-check">
                            <input class="form-check-input" type="radio" name="filterRadio" id="allreport" value="4" asp-for="@filter" checked />
                            <label class="form-check-label" for="allreport"> All Reports </label>
                        </div>
                    </div>


                    <div class="row">
                        <div class="col-12 mt-4">
                            <p class="m-0">You are about to open report, Project code: <span id="projectCode"></span></p>
                        </div>
                    </div>
                    <div class="row">
                        <div class="col-12">
                            <div id="proggress" class="progress-show-bar" style="display:none;">
                                <label for="theprogressbar">Downloading progress:</label>
                                <progress id="theprogressbar" value="0" max="100">0%</progress>
                            </div>
                        </div>
                    </div>

                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-dx-secondary ripple-surface-dark" data-mdb-dismiss="modal">
                        Close
                    </button>
                    <button type="submit" class="btn btn-dx ripple-surface-dark" id="submitCode">Open On Web</button>
                    <button type="button" class="btn btn-dx ripple-surface-dark" id="openfile"><i class="far fa-lg fa-file-pdf"></i></button>
                    <button type="button" class="btn btn-dx ripple-surface-dark" id="downloadfile"><i class="fas fa-lg fa-file-download"></i></button>

                    <!--<button type="submit" class="btn btn-dx" asp-controller="Reports" asp-action="Details" asp-all-route-data="">Open with PDF</button>-->
                </div>
            </div>
        </div>
    </div>
</form>

<form method="post" asp-controller="Reports" asp-action="LoadingPdfView" id="form_open" target="_blank" class="d-none" hidden>
    <input type="text" name="_ProjectCode" id="zProjectCode" value="" />
    <input type="text" name="_ProjectFilter.StartDate" id="zProjectFilter_StartDate" value="" />
    <input type="text" name="_ProjectFilter.FinishDate" id="zProjectFilter_FinishDate" value="" />
    <input type="text" name="_FilterRadio" id="zFilterRadio" value="" />
</form>

<form method="post" asp-controller="Reports" asp-action="SetChart" id="form_download" class="d-none" hidden>
    <input type="text" name="projectCode" id="xProjectCode" value="" />
    <input type="text" name="startDate" id="xProjectFilter_StartDate" value="" />
    <input type="text" name="finishDate" id="xProjectFilter_FinishDate" value="" />
    <input type="text" name="filterRadio" id="xFilterRadio" value="" />
    <input type="text" name="chartString" id="xChartString" />
</form>
<div class="demo-container d-none" id="renderedSection" hidden>
    <div id="chart">
    </div>
</div>
<div class="d-none" hidden>
    <textarea id="textbox">Type something here</textarea> <button id="create">Create file</button> <a download="info.txt" id="downloadlink" style="display: none">Download</a>
</div>
@*
    @section Scripts{
        <script src="~/js/projeTanim.js"></script>
    }

*@

@section Scripts{
    <script src="https://cdn3.devexpress.com/jslib/21.2.5/js/localization/dx.messages.tr.js"></script>

    <script type="text/javascript" src="//cdnjs.cloudflare.com/ajax/libs/jquery-cookie/1.4.1/jquery.cookie.min.js"></script>
    <script src="~/js/progressbarHub.js"></script>
    <script>
        var pStartDate = '';
        var pFinishDate = '';

        var progressCookie = $.cookie('progress_id');
        $("#datebtn").click(function () {



            console.log("Output: " + dateVal);
            alert("date tested.");
            $('#dateForm').submit();
        });

        $(document).ready(function () {

            console.clear();
            var open = false;
            var close = false;
            var selectedDate = new Date('@DateTime.Now.Date');
            var pCode = '';

            var pFilterRadio = 4;
            if ($('#open').is(":checked")) {
                open = true;
            }
            if ($('#close').is(":checked")) {
                close = true;
            }
            $('#filterRadioCheck input').on('change', function () {
                pFilterRadio = $('input[name=filterRadio]:checked', '#filterRadioCheck').val();
                pStartDate = $('#dateStartinp').val();
                alert("radiochecked!");
            });




            $("#openfile").click(function () {
                console.log("pCode: " + pCode);
                alert("Downloading PDF - Project Code: " + pCode)

                $('#zProjectCode').val(pCode);
                $('#zProjectFilter_StartDate').val(pStartDate);
                $('#zProjectFilter_FinishDate').val(pFinishDate);
                $('#zFilterRadio').val(pFilterRadio);

                $('#form_open').submit();





            });
            $("#downloadfile").click(function () {
                console.log("pCode: " + pCode);

                $('#xProjectCode').val(pCode);
                $('#xProjectFilter_StartDate').val(pStartDate);
                $('#xProjectFilter_FinishDate').val(pFinishDate);
                $('#xFilterRadio').val(pFilterRadio);

                console.log("pFinishDate: " + pStartDate);
                $.ajax({
                    type: "GET",
                    url: "/set-chart/?projectCode=" + pCode + "&startDate=" + pStartDate + "&finishDate=" + pFinishDate + "&filterRadio=" + pFilterRadio,
                    success: function (dataSource) {
                        var projectFilter = dataSource._ProjectFilter;
                        pFilterRadio = dataSource._FilterRadio;
                        dataSource = dataSource._ProjectTotalsOnebyDate;
                        console.log("startDate: " + projectFilter.startDate);
                        pStartDate = projectFilter.startDate;
                        pFinishDate = projectFilter.finishDate;
                        alert(JSON.stringify(projectFilter.startDate));
                        console.log("datasource: "+dataSource);

                        $.fn.setChart = function () {
                            $(() => {
                                $('#chart').dxChart({
                                    dataSource,
                                    commonSeriesSettings: {
                                        argumentField: 'kontrolTarihi',
                                        type: 'bar',
                                        hoverMode: 'allArgumentPoints',
                                        selectionMode: 'allArgumentPoints',
                                        label: {
                                            visible: true,
                                            format: {
                                                type: 'fixedPoint',
                                                precision: 0,
                                            },
                                        },
                                    },
                                    size: {
                                        width: 830,
                                    },
                                    animation: {
                                        enabled: false,
                                    },
                                    series: [
                                        { valueField: 'kontrolAdedi', name: 'Kontrol Adedi' },
                                        { valueField: 'hataAdeti', name: 'Hata Adedi' },
                                    ],
                                    title: 'Günlük Kontrol / Hatalı Adetleri - Daily Checked / Nok QTYS - Hatalar / NOK QTY',
                                    legend: {
                                        verticalAlignment: 'bottom',
                                        horizontalAlignment: 'center',
                                    },

                                    onPointClick(e) {
                                        e.target.select();
                                    },
                                });
                            });
                        };
                        $().setChart();
                        setTimeout(function () {
                            $(document).trigger('afterready');
                        }, 100);

                    }
                });

            });
            $.ajax({
                type: "GET",
                url: "/getuser",
                cache: false,
                success: function (data) {
                    $("#type").text('Area: '+data.userType);
                    $("#name").text(data.nameField);
                    $("#mail").text(data.email);
                }
            });

            $(() => {
                const now = new Date();
                $('#dateFinish').dxDateBox({
                    type: 'date',
                    value: now,
                    placeholder: '@DateTime.Now.ToString("dd/MM/yyyy")',
                    showClearButton: true,
                    useMaskBehavior: true,
                    displayFormat: "dd/MM/yyyy",
                    onValueChanged(data) {

                        var _fullDate = data.value;
                        var datestr = _fullDate.getDate() + '.' + (_fullDate.getMonth() + 1) + "." + _fullDate.getFullYear();
                        $('#dateFinishinp').val(datestr);
                        pFinishDate = datestr;
                        console.log("value changed :" + datestr);
                    },
                });

                var dateVal = $("#dateFinish").dxDateBox("instance").option("value");
                $('#dateFinishinp').val(dateVal);
            });

            $("#open").change(function () {
                if (this.checked) {
                    open = true;
                } else {
                    open = false;
                }


                $('#large-indicator').dxLoadIndicator({
                    height: 60,
                    width: 60,
                });
                $('#spinner-loading').show();
                $('#expertgrid').hide();
                setTimeout(function () {
                    ajaxCall();
                }, 100);

            });
            $("#close").change(function () {
                if (this.checked) {
                    close = true;
                } else {
                    close = false;
                }

                $('#large-indicator').dxLoadIndicator({
                    height: 60,
                    width: 60,
                });
                $('#spinner-loading').show();
                $('#expertgrid').hide();
                setTimeout(function () {
                    ajaxCall();
                }, 100);
            });



            function ajaxCall() {
                $.ajax({
            type: "post",
                url: "/Reports/GetAllReportJson",
                "data": {
                    'id': '@Model',
                    'open': open,
                    'close': close,
                },
                beforeSend: function () {

                    $('#large-indicator').dxLoadIndicator({
                        height: 60,
                        width: 60,
                    });
                },
                success: function (response) {
                    $.ajax({
                        contentType: 'application/json; charset=utf-8',
                        dataType: 'json',
                        type: 'POST',
                        url: "/Reports/GetReportTotalValuesJson",

                        "data": JSON.stringify(response),


                        success: function (totalVals) {
                            $('#checkedVal').empty();
                            $('#nokVal').empty();
                            $('#reworkVal').empty();
                            $('#oprVal').empty();
                            $('#spentMin').empty();
                            $('#actualMin').empty();
                            $('#spentHour').empty();
                            $('#grandTotal').empty();


                            $('#checkedVal').append(totalVals.qprojeDetayTKontrolAdedi);
                            $('#nokVal').append(totalVals.qprojeDetayTHataAdeti);
                            $('#reworkVal').append(totalVals.qprojeDetayTTamirAdedi);
                            $('#oprVal').append(totalVals.qprojeDetayTOperatorSayisi);
                            $('#spentMin').append(totalVals.qprojeDetayToplamSuredk);
                            $('#actualMin').append(totalVals.qprojeDetayGerceklesenDk);
                            $('#spentHour').append(totalVals.qprojeDetayHarcananSaat);
                            $('#grandTotal').append(totalVals.qprojeDetayToplam);



                },

            });

                    $('#large-indicator').dxLoadIndicator({
                        height: 0,
                        width: 0,
                    });
                    $('#spinner-loading').hide();
                    setTimeout(function () {
                        $('#expertgrid').show();
                    }, 100);
                $(() => {

                    $('#gridContainer').dxDataGrid({
                        dataSource: response,
                        keyExpr: 'id',
                        showBorders: true,
                        selection: {
                            mode: 'single',
                        },
                        headerFilter: {
                            visible: true,
                        },

                        filterPanel: {
                            visible: true,
                        },
                        filterRow: {
                            visible: true,
                        },
                        pager: {
                            allowedPageSizes: [10,20,50,100],
                            showPageSizeSelector: true,
                            showNavigationButtons: true,
                        },
                        paging: {
                            pageSize: 10,
                        },
                        focusedRowEnabled: true,
                        columns: [

                            { dataField: 'customerName', caption: 'Customers', "width": "auto" },//Görünecek alan
                            /*{ dataField: 'operationArea', caption: 'Opr Area', "width": "auto" }*/,//Görünmeyecek Alan

                            /*{ dataField: 'projectCode', caption: 'Code', "width": "75px" },*/
                            { dataField: 'nokDescs', caption: 'Nok Descriptions', "width": "200px" },
                            { dataField: 'productRefs', caption: 'Product Ref', "width": "200px" },
       
                            { dataField: 'state', caption: 'State',"width":"auto" },
                            { dataField: 'approvalState', caption: 'Approval State',"width":"auto" },
                            { dataField: 'startDate', caption: 'Start Date', "width": "85px" },

                            /*{ dataField: 'responsible', caption: 'Responsible', "width": "auto" },*/

                            { dataField: 'compNr', caption: 'Comp Nr.' },
                            { dataField: 'material', caption: 'Material' },
                            /*{ dataField: 'note', caption: 'Note' },*/
                            /*{ dataField: 'currency', caption: 'Currency', "width": "5%" },*/


                        ],
                        onSelectionChanged(selectedItems) {
                            console.clear();
                            const data = selectedItems.selectedRowsData[0];
                            pCode = data.projectCode;
                            pStartDate = data.startDate;


                            //var _fullDate = $('#dateFinishinp').val();
                            var _fullDate = new Date();
                            var datestr = _fullDate.getDate() + '.' + (_fullDate.getMonth() + 1) + "." + _fullDate.getFullYear();

                            pFinishDate = datestr;
                            $('#dateFinishinp').val(pFinishDate);
                            pFilterRadio = $('#daily').val();
                            pFilterRadio = $('input[name=filterRadio]:checked', '#filterRadioCheck').val();
                            console.log("FinishDate: " + pFinishDate);
                            $('#proggress').css('display', 'none');
                            $('#theprogressbar').html('0%').val(0);

                            $('#zProjectCode').val(pCode);
                            $('#zProjectFilter_StartDate').val(pStartDate);
                            $('#zProjectFilter_FinishDate').val(pFinishDate);
                            $('#zFilterRadio').val(pFilterRadio);

                            if (data) {

                                $('#selectedVal').attr("value", data.projectCode);
                                console.log("seçilen Proje: "+data.projectCode);
                                $('#selectionMessage').modal('toggle');
                                selectedDate = data.startDate;
                                console.log("Json string: "+JSON.stringify(selectedDate));
                                $('#dateStartinp').val(selectedDate);
                                $('#projectCode').empty(data.startDate);
                                $('#projectCode').append(data.projectCode);
                                $(() => {
                                    var dateStr = JSON.stringify(data.startDate);
                                    var dateAr = dateStr.split('.');

                                    var day = dateAr[0];
                                    var month = dateAr[1];
                                    var year = dateAr[2];

                                    console.log("Testing: " + day + '.' + month + '.' + year);
                                    console.log("dateStr: " + year);

                                    var startDateFormat = new Date(JSON.stringify(data.startDate));
                                    var datestr = JSON.stringify(startDateFormat.getDate() + '.' + (startDateFormat.getMonth() + 1) + "." + startDateFormat.getFullYear());
                                    const startDateDxVal2 = new Date(startDateFormat.getDate() + '.' + (startDateFormat.getMonth() + 1) + "." + startDateFormat.getFullYear());
                                    const startDateDxVal = month + '.' + day + '.' + year;

                                    console.log("Checking: " + startDateDxVal);


                                    $('#dateStarting').dxDateBox({
                                        type: 'date',
                                        displayFormat: 'dd/MM/yyyy',
                                        value: startDateDxVal,
                                        placeholder: selectedDate,
                                        showClearButton: true,
                                        useMaskBehavior: false,

                                        onValueChanged(datechanged) {
                                            pStartDate = datechanged.value;
                                            console.log("value changed :" + new Date(datechanged.value));
                                            $('#dateStartinp').val(datechanged.value);
                                        },
                                    });

                                });
                                $("#submitCode").click(function () {

                                    $('#frmCode').submit(function (event) {
                                        //var action = '/project/' + data.projectCode;

                                        /*var action = 'project';
                                        $(this).attr('action', action);*/
                                    });
                                });

                            }
                        },
                    });
                });
                },
                error: function (e) {
                    $('#sectionArea').append('<div class="alert alert-danger" role="alert" data-mdb-color="danger">' +e.statusText+ '</div >');

                    $('#large-indicator').dxLoadIndicator({
                        height: 0,
                        width: 0,
                    });
                },
                timeout:60000,
                });


            }

            ajaxCall();
            console.clear();
            var rowCount = $('.dx-datagrid-table >tbody >tr').length;
            console.log("Dx Row Count: " + rowCount);

            function getFormattedDate(date) {
                var year = date.getFullYear();

                var month = (1 + date.getMonth()).toString();
                month = month.length > 1 ? month : '0' + month;

                var day = date.getDate().toString();
                day = day.length > 1 ? day : '0' + day;

                return day + '.' + month + '.' + year;
            }
            function getFormattedDateRevReg(date) {
                var year = date.getFullYear();

                var month = (1 + date.getMonth()).toString();
                month = month.length > 1 ? month : '0' + month;

                var day = date.getDate().toString();
                day = day.length > 1 ? day : '0' + day;

                return year + '.' + month + '.' + day;
            }

        });

        $(document).bind('afterready', function () {
            var xprojectCode = $('#xProjectCode').val();
            /*
            var xprojectFilterStart = $('#xProjectFilter_StartDate').val();
            var xprojectFilterFinish = $('#xProjectFilter_FinishDate').val();*/
            var xprojectFilterStart = pStartDate;
            var xprojectFilterFinish = pFinishDate;
            var chartString = $('#renderedSection').html();
            $('#xChartString').val(chartString);
            $('#xProjectFilter_StartDate').val(pStartDate);
            $('#xProjectFilter_FinishDate').val(pFinishDate);

            console.log("xprojectCode: "+xprojectCode);
            console.log("xprojectFilterStart: "+xprojectFilterStart);
            console.log("xprojectFilterFinish: "+xprojectFilterFinish);
            console.log("chartString" + chartString);

            $('#form_download').submit();
            $('#proggress').show();

        });


        function customSearch(data, text) {
            text = document.getElementById("searchinput").value;
            data = document.getElementById("reports");
            console.log("text= ", text);
            console.log("data= ", data);
            return data.filter(function (row) {
                return row.field.indexOf(text) > -1
            })
        }
    </script>



}
